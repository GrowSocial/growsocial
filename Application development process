In a functioning application, the organization of elements is conceived as an architecture.

The architecture is construed as a reflection of the natural process of relationship, the interaction between elements comprising a structure. An adequate architecture reflects this process, and a great architecture lends encouragement to the continued development of the relationships a structure can provide.

Architecture has levels organized through hierarchy. Just like materials involved is physical buildings, like nails, wood, stone, mortar, software systems contain hierarchy. A good blueprint of that hierarchy is fundamental to proper engineering and maintenance of the software.

If we stay with the analogy of physical buildings, the user stories are a sketched visualization of a final building. At first they are summarized to initial lists. Next, a careful appraisal of all the lists is needed to uncover a hierarchy for the functional system they might belong to. Delineating that hierarchy is a first step considering what software platform will be adequate and optimal to build the application.

The hierarchy model is not only an organization of elements, but also of functions and procedures. It is not sufficient to merely mention a function or feature, but also map where and when their role is active.

